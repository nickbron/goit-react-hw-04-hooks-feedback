{"version":3,"sources":["components/Feedback/Feedback.styled.jsx","components/Sections/Sections.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Feedback/Feedback.jsx","components/App.jsx","index.js"],"names":["Card","styled","div","Section","title","children","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Button","button","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","onClick","Feedback","params","useState","setGood","setNeutral","setBad","countTotalFeedback","positiveFeedback","Math","round","name","prevState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAEaA,EAAOC,IAAOC,IAAV,4G,OCSFC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCIQC,I,EAAAA,EARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,4BAAIA,OCgBKC,EAlBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACGD,EACC,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UAGF,cAAC,EAAD,CAAcN,QAAQ,yBCbjBO,EAASb,IAAOc,OAAV,2MCiBJC,EAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAM,OAC9B,cAACR,EAAD,CAEES,KAAK,SACLC,QAAS,kBAAMN,EAAgBI,IAHjC,SAKGA,GAJIA,SCFA,SAASG,EAASC,GAC/B,MAAwBC,mBAAS,GAAjC,mBAAOlB,EAAP,KAAamB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBmB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOhB,EAAP,KAAYmB,EAAZ,KAEMC,EAAqB,WAEzB,OADctB,EAAOC,EAAUC,GAyB3BqB,EAAmBC,KAAKC,MApBJ,IAAPzB,EAAcsB,KAsBjC,OACE,eAAC/B,EAAD,WACE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACE,cAAC,EAAD,CACEa,QAAS,CAAER,OAAMC,UAASC,OAC1BO,gBAvBkB,SAAAiB,GACxB,OAAQA,GACN,IAAK,OACHP,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHN,GAAO,SAAAM,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,aAeF,cAAC,EAAD,CAAShC,MAAM,aAAf,SACE,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,IACPlB,mBAAoBmB,SCpD9B,IAOeK,EAPH,WACV,OACE,8BACE,cAACZ,EAAD,OCANa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e0772979.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Card = styled.div`\r\n  width: 400px;\r\n  padding: 20px;\r\n  margin: 20px;\r\n  border: 1px solid black;\r\n`;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {total ? (\r\n        <ul>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          <li>Positive feedback: {positivePercentage}%</li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  padding: 10px 10px;\r\n  margin: 5px;\r\n  background-color: #d3cccc;\r\n  color: green;\r\n  font-weight: bold;\r\n  font-style: italic;\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n`;\r\n","import { Button } from './FeedbackOptions.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map(option => (\r\n        <Button\r\n          key={option}\r\n          type=\"button\"\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </Button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport { Card } from './Feedback.styled';\r\nimport Section from 'components/Sections/Sections';\r\nimport Statistics from 'components/Statistics/Statistics';\r\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\r\n\r\nexport default function Feedback(params) {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const countTotalFeedback = () => {\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const percent = (good * 100) / countTotalFeedback();\r\n    return percent;\r\n  };\r\n\r\n  const incrementFeedback = name => {\r\n    switch (name) {\r\n      case 'good':\r\n        setGood(prevState => prevState + 1);\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(prevState => prevState + 1);\r\n        break;\r\n      case 'bad':\r\n        setBad(prevState => prevState + 1);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const positiveFeedback = Math.round(countPositiveFeedbackPercentage());\r\n\r\n  return (\r\n    <Card>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={{ good, neutral, bad }}\r\n          onLeaveFeedback={incrementFeedback}\r\n        />\r\n      </Section>\r\n\r\n      <Section title=\"Statistics\">\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={countTotalFeedback()}\r\n          positivePercentage={positiveFeedback}\r\n        />\r\n      </Section>\r\n    </Card>\r\n  );\r\n}\r\n","import Feedback from './Feedback/Feedback';\n\nconst App = () => {\n  return (\n    <div>\n      <Feedback />\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}